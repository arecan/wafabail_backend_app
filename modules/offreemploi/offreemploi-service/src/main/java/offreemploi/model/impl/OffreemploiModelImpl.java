/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package offreemploi.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

import offreemploi.model.Offreemploi;
import offreemploi.model.OffreemploiModel;

/**
 * The base model implementation for the Offreemploi service. Represents a row in the &quot;WAFABAIL_Offreemploi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>OffreemploiModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OffreemploiImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see OffreemploiImpl
 * @generated
 */
@JSON(strict = true)
public class OffreemploiModelImpl
	extends BaseModelImpl<Offreemploi> implements OffreemploiModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a offreemploi model instance should use the <code>Offreemploi</code> interface instead.
	 */
	public static final String TABLE_NAME = "WAFABAIL_Offreemploi";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"OffreemploiId", Types.BIGINT},
		{"titre", Types.VARCHAR}, {"detail", Types.VARCHAR},
		{"dateCreation", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("OffreemploiId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("titre", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("detail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateCreation", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table WAFABAIL_Offreemploi (uuid_ VARCHAR(75) null,OffreemploiId LONG not null primary key,titre VARCHAR(75) null,detail VARCHAR(75) null,dateCreation DATE null)";

	public static final String TABLE_SQL_DROP =
		"drop table WAFABAIL_Offreemploi";

	public static final String ORDER_BY_JPQL =
		" ORDER BY offreemploi.OffreemploiId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY WAFABAIL_Offreemploi.OffreemploiId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long OFFREEMPLOIID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public OffreemploiModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _OffreemploiId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOffreemploiId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _OffreemploiId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Offreemploi.class;
	}

	@Override
	public String getModelClassName() {
		return Offreemploi.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Offreemploi, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Offreemploi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Offreemploi, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((Offreemploi)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Offreemploi, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Offreemploi, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Offreemploi)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Offreemploi, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Offreemploi, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<Offreemploi, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<Offreemploi, Object>>
				attributeGetterFunctions =
					new LinkedHashMap<String, Function<Offreemploi, Object>>();

			attributeGetterFunctions.put("uuid", Offreemploi::getUuid);
			attributeGetterFunctions.put(
				"OffreemploiId", Offreemploi::getOffreemploiId);
			attributeGetterFunctions.put("titre", Offreemploi::getTitre);
			attributeGetterFunctions.put("detail", Offreemploi::getDetail);
			attributeGetterFunctions.put(
				"dateCreation", Offreemploi::getDateCreation);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<Offreemploi, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<Offreemploi, ?>> attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<Offreemploi, ?>>();

			attributeSetterBiConsumers.put(
				"uuid", (BiConsumer<Offreemploi, String>)Offreemploi::setUuid);
			attributeSetterBiConsumers.put(
				"OffreemploiId",
				(BiConsumer<Offreemploi, Long>)Offreemploi::setOffreemploiId);
			attributeSetterBiConsumers.put(
				"titre",
				(BiConsumer<Offreemploi, String>)Offreemploi::setTitre);
			attributeSetterBiConsumers.put(
				"detail",
				(BiConsumer<Offreemploi, String>)Offreemploi::setDetail);
			attributeSetterBiConsumers.put(
				"dateCreation",
				(BiConsumer<Offreemploi, Date>)Offreemploi::setDateCreation);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getOffreemploiId() {
		return _OffreemploiId;
	}

	@Override
	public void setOffreemploiId(long OffreemploiId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_OffreemploiId = OffreemploiId;
	}

	@JSON
	@Override
	public String getTitre() {
		if (_titre == null) {
			return "";
		}
		else {
			return _titre;
		}
	}

	@Override
	public void setTitre(String titre) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_titre = titre;
	}

	@JSON
	@Override
	public String getDetail() {
		if (_detail == null) {
			return "";
		}
		else {
			return _detail;
		}
	}

	@Override
	public void setDetail(String detail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_detail = detail;
	}

	@JSON
	@Override
	public Date getDateCreation() {
		return _dateCreation;
	}

	@Override
	public void setDateCreation(Date dateCreation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateCreation = dateCreation;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, Offreemploi.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Offreemploi toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Offreemploi>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OffreemploiImpl offreemploiImpl = new OffreemploiImpl();

		offreemploiImpl.setUuid(getUuid());
		offreemploiImpl.setOffreemploiId(getOffreemploiId());
		offreemploiImpl.setTitre(getTitre());
		offreemploiImpl.setDetail(getDetail());
		offreemploiImpl.setDateCreation(getDateCreation());

		offreemploiImpl.resetOriginalValues();

		return offreemploiImpl;
	}

	@Override
	public Offreemploi cloneWithOriginalValues() {
		OffreemploiImpl offreemploiImpl = new OffreemploiImpl();

		offreemploiImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		offreemploiImpl.setOffreemploiId(
			this.<Long>getColumnOriginalValue("OffreemploiId"));
		offreemploiImpl.setTitre(this.<String>getColumnOriginalValue("titre"));
		offreemploiImpl.setDetail(
			this.<String>getColumnOriginalValue("detail"));
		offreemploiImpl.setDateCreation(
			this.<Date>getColumnOriginalValue("dateCreation"));

		return offreemploiImpl;
	}

	@Override
	public int compareTo(Offreemploi offreemploi) {
		long primaryKey = offreemploi.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof Offreemploi)) {
			return false;
		}

		Offreemploi offreemploi = (Offreemploi)object;

		long primaryKey = offreemploi.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<Offreemploi> toCacheModel() {
		OffreemploiCacheModel offreemploiCacheModel =
			new OffreemploiCacheModel();

		offreemploiCacheModel.uuid = getUuid();

		String uuid = offreemploiCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			offreemploiCacheModel.uuid = null;
		}

		offreemploiCacheModel.OffreemploiId = getOffreemploiId();

		offreemploiCacheModel.titre = getTitre();

		String titre = offreemploiCacheModel.titre;

		if ((titre != null) && (titre.length() == 0)) {
			offreemploiCacheModel.titre = null;
		}

		offreemploiCacheModel.detail = getDetail();

		String detail = offreemploiCacheModel.detail;

		if ((detail != null) && (detail.length() == 0)) {
			offreemploiCacheModel.detail = null;
		}

		Date dateCreation = getDateCreation();

		if (dateCreation != null) {
			offreemploiCacheModel.dateCreation = dateCreation.getTime();
		}
		else {
			offreemploiCacheModel.dateCreation = Long.MIN_VALUE;
		}

		return offreemploiCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Offreemploi, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Offreemploi, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Offreemploi, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((Offreemploi)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Offreemploi>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					Offreemploi.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _OffreemploiId;
	private String _titre;
	private String _detail;
	private Date _dateCreation;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<Offreemploi, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((Offreemploi)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("OffreemploiId", _OffreemploiId);
		_columnOriginalValues.put("titre", _titre);
		_columnOriginalValues.put("detail", _detail);
		_columnOriginalValues.put("dateCreation", _dateCreation);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("OffreemploiId", 2L);

		columnBitmasks.put("titre", 4L);

		columnBitmasks.put("detail", 8L);

		columnBitmasks.put("dateCreation", 16L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private Offreemploi _escapedModel;

}